import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

API_TOKEN = "7208455886:AAFxWj68GO1JV0MuX72G2oxVDFFqrDubiCY"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

class Form(StatesGroup):
    welcome = State()
    experience = State()
    about_you = State()
    product = State()
    offer = State()
    ask_phone = State()
    confirmation = State()

TEXTS = {
    "welcome": (
        "–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—Ü–µ! ‚òÄÔ∏è –Ø - Alfy.\n"
        "–ú–∞–º–∞ –¥–≤–æ–∏—Ö –º–∞–ª—ã—à–µ–π –∏ —É—Å–ø–µ–≤–∞—é –≤—Å—ë ‚Äî –¥–∞–∂–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ 10-100 –≤–∏–¥–µ–æ –≤ –¥–µ–Ω—å –≤—Å–µ–≥–æ –∑–∞ —á–∞—Å-–¥–≤–∞.\n\n"
        "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –±–∏–∑–Ω–µ—Å –ª—ë–≥–∫–∏–º, –∫—Ä–∞—Å–∏–≤—ã–º –∏... –±–µ–∑ –ª–∏—à–Ω–µ–π —Å—É–µ—Ç—ã?"
    ),
    "experience": (
        "üôÖ‚Äç‚ôÄÔ∏è –ù–µ –Ω—É–∂–Ω–æ –∫—Ä–∞—Å–∏—Ç—å—Å—è –ø–µ—Ä–µ–¥ —Å—ä–µ–º–∫–æ–π, –∫–æ–≥–¥–∞ —Å–æ–≤—Å–µ–º –Ω–µ –¥–æ —ç—Ç–æ–≥–æ\n"
        "üå∏ –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ —Ö–æ—Ç—å –∏–∑ –¥–µ—Ç—Å–∫–æ–π, —Ö–æ—Ç—å —Å –∫—É—Ö–Ω–∏ ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π —Ñ–æ–Ω –Ω–µ –Ω—É–∂–µ–Ω\n"
        "‚ú® –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏–ª–∏ —Å–∏–ª, –º–æ–π AI –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ –º–µ–Ω—è\n\n"
        "–ê —Ç—ã —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏—Ö AI-–∞–≤–∞—Ç–∞—Ä–æ–≤? –ò–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å—Å—è –∫ —ç—Ç–æ–π —Ç–µ–º–µ? üòä"
    ),
    "about_you": (
        "–û—Ç–ª–∏—á–Ω–æ, —Ç—ã —É–º–Ω–∏—á–∫–∞! ü§ó\n"
        "–° —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–¥–µ–ª—é—Å—å —Å–≤–æ–∏–º —Å–µ–∫—Ä–µ—Ç–æ–º ‚Äî –∫–∞–∫ –º–Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–∫–æ–≥–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞, —á—Ç–æ –æ–Ω —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–¥–∞—ë—Ç –≤–º–µ—Å—Ç–æ –º–µ–Ω—è üòç\n\n"
        "–ù–æ –¥–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ:\n"
        "–¢—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä–∞ –¥–ª—è —Å–µ–±—è, —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å, –∏–ª–∏ –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤?\n"
        "–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å —Ç–≤–æ–∏ –ø–ª–∞–Ω—ã! üòä"
    ),
    "product": (
        "–ú—ã —Å —Ç—Ä–µ–º—è —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–æ—Ç–Ω–∏ —Ñ–∏—à–µ–∫, —á—Ç–æ–±—ã —Ç–≤–æ–π AI-–∞–≤–∞—Ç–∞—Ä –±—ã–ª –∂–∏–≤—ã–º –∏ –ø—Ä–æ–¥–∞–≤–∞–ª –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∫–∞–∫ –ø—Ä–æ—Ñ–∏ ü§Ø‚ú®\n"
        "–í PDF –≤—Å—ë –Ω–µ –≤–ª–µ–∑–∞–µ—Ç ‚Äî –ø–æ—ç—Ç–æ–º—É –º—ã —Å–æ–∑–¥–∞–ª–∏ —É—é—Ç–Ω—ã–π 7-–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥.\n\n"
        "–ó–∞ –Ω–µ–¥–µ–ª—é —Ç—ã:\n"
        "- —Å–æ–∑–¥–∞—à—å —Å–≤–æ–µ–≥–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ AI-–∞–≤–∞—Ç–∞—Ä–∞\n"
        "- –∑–∞–ø—É—Å—Ç–∏—à—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Å–≤—è–∑–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–Ω–æ—Å—è—Ç –¥–æ—Ö–æ–¥ üí∏\n\n"
        "–í –ø–µ—Ä–≤–æ–º –ø–æ—Ç–æ–∫–µ –≤—Å–µ–≥–æ 10 –º–µ—Å—Ç ‚Äî —É –∫–∞–∂–¥–æ–≥–æ –±—É–¥–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã üå∑\n\n"
        "–°–µ–π—á–∞—Å —Ü–µ–Ω–∞ –¥–ª—è —Å–≤–æ–∏—Ö ‚Äî –≤—Å–µ–≥–æ 9 922‚ÇΩ –≤–º–µ—Å—Ç–æ 14 222‚ÇΩ!\n"
        "–•–æ—á–µ—à—å –≤ –ø–µ—Ä–≤—É—é –≤–æ–ª–Ω—É?"
    ),
    "offer": (
        "–ß—Ç–æ —Ç–µ–±—è –∂–¥—ë—Ç? üçå\n"
        "‚úÖ –í –º–∏–Ω–∏-–≥—Ä—É–ø–ø–µ —Ç—ã —Å–æ–∑–¥–∞—à—å —Å–≤–æ–∏—Ö —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö AI-–∞–≤–∞—Ç–∞—Ä–æ–≤\n"
        "‚úÖ –ë—É–¥–µ—à—å –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Å–≤—è–∑–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ö–≤–∞—Ç—ã, –Ω–æ –∏ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–æ—Ö–æ–¥ ü§ë\n"
        "üëåüèª –í—Å—ë —Ä–∞–∑–¥–µ–ª–µ–Ω–æ –Ω–∞ 5 –ø—Ä–æ—Å—Ç—ã—Ö –±–ª–æ–∫–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —à–∞–≥–∏, –ª–∞–π—Ñ—Ö–∞–∫–∏ –∏ —Å–µ–∫—Ä–µ—Ç–∏–∫–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏–ª–æ—Å—å –∫—Ä–∞—Å–∏–≤–æ –∏ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∂–∏–≤–æ!\n"
        "üé• –í—Å–µ —É—Ä–æ–∫–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è —É —Ç–µ–±—è –Ω–∞–≤—Å–µ–≥–¥–∞ ‚Äî –º–æ–∂–µ—à—å –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∏–º –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, –¥–∞–∂–µ —Å —á–∞—à–∫–æ–π —á–∞—è –Ω–∞ –∫—É—Ö–Ω–µ ‚òïÔ∏è\n\n"
        "–•–æ—á–µ—à—å —É—Å–ø–µ—Ç—å –≤ –ø–µ—Ä–≤—ã–π –Ω–∞–±–æ—Ä? –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –∑–∞–±–∏—Ä–∞–π —Å–≤–æ—ë –º–µ—Å—Ç–æ ‚Äî –∏—Ö –≤—Å–µ–≥–æ 10!"
    ),
    "ask_phone": (
        "–ß—Ç–æ–±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë –º–µ—Å—Ç–æ –≤ –ø–µ—Ä–≤–æ–º –ø–æ—Ç–æ–∫–µ –ø–æ —Å–ø–µ—Ü —É—Å–ª–æ–≤–∏—è–º, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä WhatsApp –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –¥–µ—Ä–∂—É –º–µ—Å—Ç–æ –∑–∞ —Ç–æ–±–æ–π!\n\n"
        "–£—Å–ø–µ–π –ø–æ–ø–∞—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–≤—ã—Ö ‚Äî –∂–¥—É —Ç–≤–æ–π –Ω–æ–º–µ—Ä! üôå‚ú®"
    ),
    "confirmation": (
        "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–≤–æ—ë –º–µ—Å—Ç–æ –≤ –ø–µ—Ä–≤–æ–º –ø–æ—Ç–æ–∫–µ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è! üòá\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –≤–Ω–µ—Å–∏ –æ–ø–ª–∞—Ç—É.\n"
        "–ï—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏, —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! üôå"
    ),
}

def kb_welcome():
    return types.ReplyKeyboardMarkup(resize_keyboard=True).add("üòÅ –•–æ—á—É")

def kb_experience():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("–ù–µ–º–Ω–æ–≥–æ")
    kb.add("üî• –•–æ—Ä–æ—à–∏–π –æ–ø—ã—Ç")
    kb.add("üòá –ù–µ—Ç –µ—â–µ")
    return kb

def kb_about_you():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üëåüèª –î–ª—è —Å–µ–±—è")
    kb.add("üöÄ –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤")
    kb.add("–û–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞")
    return kb

def kb_product():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üî• –ó–∞–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ")
    kb.add("üòÅ –•–æ—á—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ")
    return kb

def kb_offer():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üî• –ó–∞–Ω—è—Ç—å –º–µ—Å—Ç–æ")
    return kb

def kb_confirm():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
    return kb

def kb_remove():
    return types.ReplyKeyboardRemove()

@dp.message_handler(commands=["start"], state="*")
async def cmd_start(message: types.Message, state: FSMContext):
    await Form.welcome.set()
    await state.reset_data()
    await message.answer(TEXTS["welcome"], reply_markup=kb_welcome())

@dp.message_handler(lambda m: m.text == "üòÅ –•–æ—á—É", state=Form.welcome)
async def step_welcome(message: types.Message, state: FSMContext):
    await Form.experience.set()
    await message.answer(TEXTS["experience"], reply_markup=kb_experience())

@dp.message_handler(lambda m: m.text in ["–ù–µ–º–Ω–æ–≥–æ", "üî• –•–æ—Ä–æ—à–∏–π –æ–ø—ã—Ç", "üòá –ù–µ—Ç –µ—â–µ"], state=Form.experience)
async def step_experience(message: types.Message, state: FSMContext):
    await state.update_data(experience=message.text)
    await Form.about_you.set()
    await message.answer(TEXTS["about_you"], reply_markup=kb_about_you())

@dp.message_handler(lambda m: m.text in ["üëåüèª –î–ª—è —Å–µ–±—è", "üöÄ –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤", "–û–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞"], state=Form.about_you)
async def step_about_you(message: types.Message, state: FSMContext):
    await state.update_data(about=message.text)
    await Form.product.set()
    await message.answer(TEXTS["product"], reply_markup=kb_product())

@dp.message_handler(lambda m: m.text in ["üî• –ó–∞–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ", "üòÅ –•–æ—á—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ"], state=Form.product)
async def step_product(message: types.Message, state: FSMContext):
    await state.update_data(product_choice=message.text)
    await Form.offer.set()
    await message.answer(TEXTS["offer"], reply_markup=kb_offer())

@dp.message_handler(lambda m: m.text == "üî• –ó–∞–Ω—è—Ç—å –º–µ—Å—Ç–æ", state=Form.offer)
async def step_offer(message: types.Message, state: FSMContext):
    await Form.ask_phone.set()
    await message.answer(TEXTS["ask_phone"], reply_markup=kb_remove())

@dp.message_handler(state=Form.ask_phone, content_types=types.ContentTypes.TEXT)
async def step_ask_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await Form.confirmation.set()
    await message.answer(TEXTS["confirmation"], reply_markup=kb_confirm())

@dp.message_handler(lambda m: m.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", state=Form.confirmation)
async def step_confirm(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.", reply_markup=kb_remove())

@dp.message_handler(state="*", content_types=types.ContentTypes.ANY)
async def fallback_handler(message: types.Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–±—É–µ–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")

if __name__ == "__main__":
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
